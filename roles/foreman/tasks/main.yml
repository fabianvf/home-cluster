---

- name: Disable selinux
  selinux:
    state: disabled

- name: Enable firewalld service
  service:
    name: firewalld
    enabled: yes
    state: started

- name: install packages
  package:
    name: '{{ item }}'
  with_items:
    - centos-release-scl
    - epel-release
    - python-dns
    - "https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm"
    - "https://yum.theforeman.org/releases/1.15/el7/x86_64/foreman-release.rpm"
    - foreman-installer
    - tfm-rubygem-hammer_cli_foreman_discovery
    - python-dns

- name: start and enable foreman service
  service:
    name: foreman
    state: started
    enabled: yes
  ignore_errors: yes

- name: set foreman-installer command
  set_fact:
    foreman_install_cmd: |
      foreman-installer
        --foreman-admin-password={{ foreman_admin_password }}
        --enable-foreman-plugin-ansible
        --enable-foreman-plugin-discovery
        --enable-foreman-proxy
        --foreman-proxy-tftp=true
        --foreman-proxy-tftp-servername={{ foreman_ip }}
        --foreman-proxy-dns=true
        --foreman-proxy-dns-interface={{ foreman_dns_interface }}
        --foreman-proxy-dns-zone={{ foreman_subdomain }}
        --foreman-proxy-dns-reverse={{ foreman_proxy_dns_reverse }}
        --foreman-proxy-foreman-base-url=https://{{ foreman_hostname }}.{{ foreman_subdomain }}
        --foreman-proxy-bmc

- name: print foreman command
  debug:
    msg: "{{ foreman_install_cmd }}"

# TODO: write this to a file on success and compare, to prevent rerunning if not needed
- name: Run foreman installer
  command: "{{ foreman_install_cmd }}"

- name: Install discovery images
  command: foreman-installer --foreman-plugin-discovery-install-images=true

- name: open ports
  firewalld:
    port: '{{ item }}'
    state: enabled
    permanent: true
    immediate: true
  with_items:
    - 53/tcp
    - 53/udp
    - 67-69/udp
    - 80/tcp
    - 443/tcp
    - 3000/tcp
    - 3306/tcp
    - 5910-5930/tcp
    - 5432/tcp
    - 8140/tcp
    - 8443/tcp

- name: Enable foreman service
  service:
    name: foreman
    enabled: yes
    state: started

- include: sync_content.yml
- include: fedora_atomic.yml

- name: Read in the auth information for named
  command: awk -F '"' 'NF > 0 {print $2}' /etc/rndc.key
  register: result

- set_fact:
    key_name: '{{ result.stdout_lines[0] }}'
    key_secret: '{{ result.stdout_lines[-1] }}'

- name: Add the wildcard redirect for openshift master
  nsupdate:
    key_name: '{{ key_name }}'
    key_secret: '{{ key_secret }}'
    server: localhost
    type: CNAME
    record: '*.apps.{{ foreman_subdomain }}.'
    zone: '{{ foreman_subdomain }}.'
    value: 'master'
