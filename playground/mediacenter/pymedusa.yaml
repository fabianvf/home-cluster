---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pymedusa-config
  namespace: mediacenter
  labels:
    app: pymedusa
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pymedusa
  namespace: mediacenter
  labels:
    app: pymedusa
spec:
  ports:
    - name: pymedusa-http
      port: 8081
      protocol: TCP
  selector:
    app: pymedusa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pymedusa
  namespace: mediacenter
  labels:
    app: pymedusa
spec:
  selector:
    matchLabels:
      app: pymedusa
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: pymedusa
    spec:
      containers:
      - image: pymedusa/medusa
        imagePullPolicy: Always
        name: pymedusa
        ports:
        - containerPort: 8081
        readinessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec: 
            command: ['sh', '-c', 'wget -q --spider localhost:8081 && ls /downloads && ls /series']
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: pymedusa-config
        - mountPath: /downloads
          name: downloads
        - mountPath: /series
          name: series
      volumes:
      - name: pymedusa-config
        persistentVolumeClaim:
          claimName: pymedusa-config
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads
      - name: series
        persistentVolumeClaim:
          claimName: series
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: pymedusa
  namespace: mediacenter
spec:
  rules:
  - host: pymedusa.playerof.games
    http:
     paths:
     - path: /
       backend:
        serviceName: pymedusa
        servicePort: pymedusa-http
