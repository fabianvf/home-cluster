---
- name: Configure Additional Cluster Infrastructure
  hosts: first_node

  vars:
    artifacts_dir: "{{ (playbook_dir + '/../artifacts') | realpath }}"

  tasks:
    - name: deploy ingress-nginx
      import_role:
        name: k8s_nginx_ingress

    - name: verify ingress is working
      import_role:
        name: k8s_nginx_ingress
        tasks_from: verify.yml

    - name: Store results
      copy:
        content: |
          status: ingress has been successfully configured.
          address: {{ ip }}
          metallb_ip_range: {{ metallb_ip_range }}
        dest: '{{ artifacts_dir }}/results/01-ingress.yml'
      vars:
        ip: '{{ ingress_nginx_svc.resources.0.status.loadBalancer.ingress.0.ip }}'
      delegate_to: localhost
    
    - name: deploy cert-manager
      import_role:
        name: k8s_cert_manager

    - name: verify cert-manager is working
      import_role:
        name: k8s_cert_manager
        tasks_from: verify.yml

    - name: Store results
      copy:
        content: |
          status: cert-manager has been successfully configured.
        dest: '{{ artifacts_dir }}/results/01-cert-manager.yml'
      delegate_to: localhost

    - name: deploy rook-ceph
      import_role:
        name: k8s_rook_ceph

    - name: verify volume provisioning is working
      import_role:
        name: k8s_rook_ceph
        tasks_from: verify.yml

    - name: Get rook-ceph dashboard password secret
      k8s_info:
        api_version: v1
        kind: Secret
        name: rook-ceph-dashboard-password
        namespace: rook-ceph
      register: k8s_dashboard_password
      no_log: True

    - name: Write dashboard secret to artifacts
      copy:
        content: '{{ k8s_dashboard_password.resources.0.data.password | b64decode }}'
        dest: '{{ artifacts_dir }}/rook_ceph_dashboard_password.txt'
      no_log: True
      delegate_to: localhost

    - name: Store results
      copy:
        content: |
          status: rook-ceph has been successfully configured.
          manager_dashboard_url: rook-ceph.{{ cluster_subdomain }}
          username: admin
          password: Stored in {{ artifacts_dir }}/rook_ceph_dashboard_password.txt
        dest: '{{ artifacts_dir }}/results/01-storage.yml'
      delegate_to: localhost

    - name: Store Homer configuration
      copy:
        content: '{{ lookup("template", "templates/homer_service.yml.j2") }}'
        dest: '{{ artifacts_dir }}/homer/admin_rook_ceph.yml'
      vars:
        service_name: "Rook Ceph Dashboard"
        service_icon: "fas fa-chess-rook"
        service_subtitle: Dashboard for rook-ceph cluster
        service_tag: storage
        service_url: 'http://rook-ceph.{{ cluster_subdomain }}'
      delegate_to: localhost

    - import_role:
        name: k8s_velero

    - name: verify velero backups are working
      import_role:
        name: k8s_velero
        tasks_from: verify.yml

    - name: Create a velero backup schedule
      command: >
        velero schedule create cluster-backup
        --schedule "{{ velero_backup_schedule }}"
        --ttl {{ velero_backup_ttl }}h0m0s
      register: result
      failed_when: "result is failed and 'already exists' not in result.stderr"
      changed_when: "'already exists' not in result.stdout"

    - name: Store results
      copy:
        content: |
          status: Velero backups to a minio NFS gateway have been successfully configured
          backup_volume_name: {{ backup_nfs_pv.metadata.name }}
          full_cluster_backup_schedule: {{ velero_backup_schedule }}
          minio_address: minio.{{ cluster_subdomain }}
          access_key: {{ lookup('file', artifacts_dir + '/minio_access_key.txt') }}
          secret_key: Stored in {{ artifacts_dir }}/minio_secret_key.txt
        dest: '{{ artifacts_dir }}/results/01-backups.yml'
      delegate_to: localhost

    - name: Store Homer configuration
      copy:
        content: '{{ lookup("template", "templates/homer_service.yml.j2") }}'
        dest: '{{ artifacts_dir }}/homer/admin_minio.yml'
      vars:
        service_name: "MinIO Dashboard"
        service_icon: "far fa-minus-square"
        service_subtitle: Dashboard for MinIO NAS storage gateway
        service_tag: storage
        service_url: 'http://minio.{{ cluster_subdomain }}'
      delegate_to: localhost
